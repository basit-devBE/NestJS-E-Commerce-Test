// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client" // Standard location
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id    String @id @default(cuid())
  name  String
  email String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isVerified Boolean @default(false)
  orders Order[]
}
model Product{
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  stock       Int
  orders      OrderItem[]
}

model Order {
  id          String   @id @default(cuid())
  userId      String
  orderItems  OrderItem[]
    
  totalPrice  Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  status      String   @default("pending") // e.g., pending, completed, cancelled
  paymentMethod String // e.g., credit_card, paypal, etc.
  user        User     @relation(fields: [userId], references: [id])
}

model OrderItem {
  id          String   @id @default(cuid())
  orderId     String
  productId   String
  quantity    Int
  price       Float
  
  order       Order    @relation(fields: [orderId], references: [id])
  product     Product  @relation(fields: [productId], references: [id])
}

